// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dproto/response.proto

package dproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// message Response {
// PacketType Type                     = 1;
//
// Platform platform                   = 2;
// map<string,Interface> Interfaces    = 3;
// repeated LldpNeighbor LldpNeighbors = 4;
// repeated Vlan Vlans                 = 5;
// repeated Ipif Ipifs                 = 6;
// string Uplink                       = 7;
// string Config                       = 8;
//
// string ReplyID                      = 9;
//
// // We need this for bulk responses like 'all'
// map<string, string> Errors          = 99;
// string Error                        = 100;
//
// reserved 10 to 98;
// }
type BoxResponse struct {
	Platform      *Platform             `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Interfaces    map[string]*Interface `protobuf:"bytes,3,rep,name=Interfaces,proto3" json:"Interfaces,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LldpNeighbors []*LldpNeighbor       `protobuf:"bytes,4,rep,name=LldpNeighbors,proto3" json:"LldpNeighbors,omitempty"`
	Vlans         []*Vlan               `protobuf:"bytes,5,rep,name=Vlans,proto3" json:"Vlans,omitempty"`
	Ipifs         []*Ipif               `protobuf:"bytes,6,rep,name=Ipifs,proto3" json:"Ipifs,omitempty"`
	Uplink        string                `protobuf:"bytes,7,opt,name=Uplink,proto3" json:"Uplink,omitempty"`
	Config        string                `protobuf:"bytes,8,opt,name=Config,proto3" json:"Config,omitempty"`
	ReplyID       string                `protobuf:"bytes,9,opt,name=ReplyID,proto3" json:"ReplyID,omitempty"`
	// We need this for bulk responses like 'all'
	Errors               map[string]string `protobuf:"bytes,99,rep,name=Errors,proto3" json:"Errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error                string            `protobuf:"bytes,100,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BoxResponse) Reset()         { *m = BoxResponse{} }
func (m *BoxResponse) String() string { return proto.CompactTextString(m) }
func (*BoxResponse) ProtoMessage()    {}
func (*BoxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_e6586a9ddf96fe18, []int{0}
}
func (m *BoxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoxResponse.Unmarshal(m, b)
}
func (m *BoxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoxResponse.Marshal(b, m, deterministic)
}
func (dst *BoxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoxResponse.Merge(dst, src)
}
func (m *BoxResponse) XXX_Size() int {
	return xxx_messageInfo_BoxResponse.Size(m)
}
func (m *BoxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BoxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BoxResponse proto.InternalMessageInfo

func (m *BoxResponse) GetPlatform() *Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *BoxResponse) GetInterfaces() map[string]*Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *BoxResponse) GetLldpNeighbors() []*LldpNeighbor {
	if m != nil {
		return m.LldpNeighbors
	}
	return nil
}

func (m *BoxResponse) GetVlans() []*Vlan {
	if m != nil {
		return m.Vlans
	}
	return nil
}

func (m *BoxResponse) GetIpifs() []*Ipif {
	if m != nil {
		return m.Ipifs
	}
	return nil
}

func (m *BoxResponse) GetUplink() string {
	if m != nil {
		return m.Uplink
	}
	return ""
}

func (m *BoxResponse) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

func (m *BoxResponse) GetReplyID() string {
	if m != nil {
		return m.ReplyID
	}
	return ""
}

func (m *BoxResponse) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *BoxResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*BoxResponse)(nil), "dproto.BoxResponse")
	proto.RegisterMapType((map[string]string)(nil), "dproto.BoxResponse.ErrorsEntry")
	proto.RegisterMapType((map[string]*Interface)(nil), "dproto.BoxResponse.InterfacesEntry")
}

func init() { proto.RegisterFile("dproto/response.proto", fileDescriptor_response_e6586a9ddf96fe18) }

var fileDescriptor_response_e6586a9ddf96fe18 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xcf, 0x4f, 0xfa, 0x30,
	0x14, 0xcf, 0x80, 0x0d, 0xf6, 0xf6, 0xfd, 0x46, 0x6c, 0xa6, 0x69, 0xb8, 0x48, 0xf0, 0x20, 0x07,
	0x33, 0x13, 0x3c, 0xa8, 0x1c, 0x45, 0x0e, 0x18, 0x63, 0x48, 0x13, 0xbd, 0x0f, 0xe8, 0x70, 0xa1,
	0xae, 0x4d, 0x3b, 0x8c, 0xfb, 0xaf, 0xfc, 0x13, 0xcd, 0xda, 0x0d, 0x8a, 0xe1, 0xd6, 0xcf, 0xcf,
	0xe6, 0xbd, 0x07, 0x67, 0x2b, 0x21, 0x79, 0xce, 0x6f, 0x24, 0x55, 0x82, 0x67, 0x8a, 0x46, 0x1a,
	0x22, 0xcf, 0xd0, 0xbd, 0x70, 0x2f, 0x6f, 0x59, 0xae, 0x8c, 0x3a, 0xf8, 0x69, 0x41, 0xf0, 0xc8,
	0xbf, 0x49, 0x95, 0x41, 0xd7, 0xd0, 0x11, 0x2c, 0xce, 0x13, 0x2e, 0x3f, 0xb1, 0xd3, 0x77, 0x86,
	0xc1, 0xa8, 0x1b, 0x99, 0x60, 0x34, 0xaf, 0x78, 0xb2, 0x73, 0xa0, 0x09, 0xc0, 0x2c, 0xcb, 0xa9,
	0x4c, 0xe2, 0x25, 0x55, 0xb8, 0xd9, 0x6f, 0x0e, 0x83, 0xd1, 0x65, 0xed, 0xb7, 0x6a, 0xa3, 0xbd,
	0x6b, 0x9a, 0xe5, 0xb2, 0x20, 0x56, 0x0c, 0x8d, 0xe1, 0xff, 0x0b, 0x5b, 0x89, 0x57, 0x9a, 0xae,
	0x3f, 0x16, 0x5c, 0x2a, 0xdc, 0xd2, 0x3d, 0x61, 0xdd, 0x63, 0x8b, 0xe4, 0xd0, 0x8a, 0x06, 0xe0,
	0xbe, 0xb3, 0x38, 0x53, 0xd8, 0xd5, 0x99, 0x7f, 0x75, 0xa6, 0x24, 0x89, 0x91, 0x4a, 0xcf, 0x4c,
	0xa4, 0x89, 0xc2, 0xde, 0xa1, 0xa7, 0x24, 0x89, 0x91, 0xd0, 0x39, 0x78, 0x6f, 0x82, 0xa5, 0xd9,
	0x06, 0xb7, 0xfb, 0xce, 0xd0, 0x27, 0x15, 0x2a, 0xf9, 0x09, 0xcf, 0x92, 0x74, 0x8d, 0x3b, 0x86,
	0x37, 0x08, 0x61, 0x68, 0x13, 0x2a, 0x58, 0x31, 0x7b, 0xc2, 0xbe, 0x16, 0x6a, 0x88, 0xee, 0xc0,
	0x9b, 0x4a, 0x59, 0x8e, 0xb1, 0xd4, 0xdf, 0x5d, 0x1c, 0x5b, 0x87, 0x71, 0x98, 0x55, 0x54, 0x76,
	0x14, 0x82, 0xab, 0x5f, 0x78, 0xa5, 0x0b, 0x0d, 0xe8, 0xcd, 0xe1, 0xe4, 0xcf, 0xee, 0x50, 0x17,
	0x9a, 0x1b, 0x5a, 0xe8, 0xeb, 0xf8, 0xa4, 0x7c, 0xa2, 0x2b, 0x70, 0xbf, 0x62, 0xb6, 0xa5, 0xb8,
	0xa1, 0x2f, 0x76, 0xba, 0x9b, 0xb0, 0x4e, 0x12, 0xa3, 0x8f, 0x1b, 0xf7, 0x4e, 0xef, 0x01, 0x02,
	0xeb, 0xfb, 0x23, 0x6d, 0xa1, 0xdd, 0xe6, 0x5b, 0xd1, 0xe7, 0x56, 0x07, 0xba, 0xcb, 0x85, 0xa7,
	0xcb, 0x6f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x01, 0xfc, 0x27, 0xa7, 0x70, 0x02, 0x00, 0x00,
}
